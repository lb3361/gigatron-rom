#VCPUv7

# ======== ('DATA', 'x', code0, 8, 2)
def code0():
	align(2);
	label('x');
	words(1); # 1
	bytes(2); # 2
	space(1);
	bytes(3); # 3
	bytes(64); # 64
	bytes(80); # 80
	bytes(6); # 6
# ======== ('DATA', 'i', code1, 2, 2)
def code1():
	align(2);
	label('i');
	words(16); # 16
# ======== ('DATA', 'y', code2, 4, 2)
def code2():
	align(2);
	label('y');
	bytes(35); # 35
	space(1);
	bytes(9); # 9
	bytes(0); # 0
# ======== ('CODE', 'main', code3)
def code3():
	label('main');
	_PROLOGUE(16,14,0x0); # save=None
	LDWI('.4');STW(R8);
	_STLW(0);
	LDWI('x');DEEKA(R9);
	LDW(R9);_STLW(2);
	LDWI(v('x')+2);PEEK();STW(R10);
	LDW(R10);_STLW(4);
	LDWI(v('x')+4);DEEK();_SHLI(4);_SHRIS(4);STW(R11);
	LDW(R11);_STLW(6);
	LDWI(v('x')+4);DEEK();_SHRIS(12);STW(R12);
	LDW(R12);_STLW(8);
	LDWI(v('x')+6);DEEK();_SHLI(9);_SHRIS(13);STW(R13);
	LDW(R13);_STLW(10);
	LDWI(v('x')+7);PEEK();STW(R14);
	LDW(R14);_STLW(12);
	CALLI('printf');
	LDWI('.10');STW(R8);
	_STLW(0);
	LDWI('y');DEEKA(R23);
	LDW(R23);ANDI(3);STW(R9);
	LDW(R9);_STLW(2);
	LDW(R23);_SHRIU(2);ANDI(15);STW(R10);
	LDW(R10);_STLW(4);
	LDWI(v('y')+2);DEEKA(R11);
	LDW(R11);_STLW(6);
	CALLI('printf');
	MOVIW(v('x')+4,R23);
	MOVIW(4095,R22);
	MOVIW(0xf000,R21);
	LDWI('i');DEEK();_SHLI(12);_SHRIS(12);_SHLI(12);ANDW(R21);STW(R21);
	DEEKV(R23);ANDW(R22);ORW(R21);DOKE(R23);
	MOVIW(v('x')+6,R23);
	MOVIW(0xff8f,R22);
	DEEKV(R23);ANDW(R22);DOKE(R23);
	LDWI('.4');STW(R8);
	_STLW(0);
	LDWI('x');DEEKA(R9);
	LDW(R9);_STLW(2);
	LDWI(v('x')+2);PEEK();STW(R10);
	LDW(R10);_STLW(4);
	LDWI(v('x')+4);DEEK();_SHLI(4);_SHRIS(4);STW(R11);
	LDW(R11);_STLW(6);
	LDWI(v('x')+4);DEEK();_SHRIS(12);STW(R12);
	LDW(R12);_STLW(8);
	LDWI(v('x')+6);DEEK();_SHLI(9);_SHRIS(13);STW(R13);
	LDW(R13);_STLW(10);
	LDWI(v('x')+7);PEEK();STW(R14);
	LDW(R14);_STLW(12);
	CALLI('printf');
	MOVIW('y',R23);
	MOVIW(0xfffc,R22);
	DEEKV(R23);ANDW(R22);ORI(2);DOKE(R23);
	LDWI('i');DEEKA(R23);
	LDWI(v('y')+2);DOKEA(R23);
	LDWI('.10');STW(R8);
	_STLW(0);
	LDWI('y');DEEKA(R23);
	LDW(R23);ANDI(3);STW(R9);
	LDW(R9);_STLW(2);
	LDW(R23);_SHRIU(2);ANDI(15);STW(R10);
	LDW(R10);_STLW(4);
	LDWI(v('y')+2);DEEKA(R11);
	LDW(R11);_STLW(6);
	CALLI('printf');
	LDWI('x');STW(R8);
	_STLW(0);
	CALLI('f2');
	LDI(0);
	label('.3');
	_EPILOGUE(16,14,0x0,saveAC=True);
# ======== ('CODE', 'f1', code4)
def code4():
	label('f1');
	_PROLOGUE(12,8,0x80); # save=R7
	LDW(R8);STW(R7);
	MOVIW(0xffc3,R23);
	DEEK();ANDW(R23);DOKE(R7);
	MOVIW(0xfffc,R23);
	LDI(0);ANDI(3);ANDI(3);STW(R22);
	DEEKV(R7);ANDW(R23);ORW(R22);DOKE(R7);
	DEEKV(R7);ANDI(60);_BEQ('.22');
	LDWI('.24');STW(R8);
	_STLW(0);
	CALLI('printf');
	label('.22');
	DEEKV(R7);ORI(3);DOKE(R7);
	DEEKV(R7);ORI(60);DOKE(R7);
	LDWI('.25');STW(R8);
	_STLW(0);
	DEEKV(R7);STW(R23);
	ANDI(3);STW(R9);
	LDW(R9);_STLW(2);
	LDW(R23);_SHRIU(2);ANDI(15);STW(R10);
	LDW(R10);_STLW(4);
	CALLI('printf');
	LDI(0);
	label('.21');
	_EPILOGUE(12,8,0x80,saveAC=True);
# ======== ('CODE', 'f2', code5)
def code5():
	label('f2');
	_PROLOGUE(8,2,0xc0); # save=R6-7
	MOVW(R8,R7);
	LDWI('i');DEEK();_BNE('.28');
	MOVQW(1,R6);
	_BRA('.29');
	label('.28');
	MOVQW(0,R6);
	label('.29');
	MOVIW(0xfffc,R23);
	LDW(R6);ANDI(3);ANDI(3);STW(R22);
	DEEKV(R7);ANDW(R23);ORW(R22);DOKE(R7);
	MOVW(R7,R8);
	CALLI('f1');
	MOVIW(0xffc3,R23);
	LDI(0);ANDI(15);_SHLI(2);ANDI(60);STW(R22);
	DEEKV(R7);ANDW(R23);ORW(R22);DOKE(R7);
	LDI(0);
	label('.26');
	_EPILOGUE(8,2,0xc0,saveAC=True);
# ======== ('DATA', '.25', code6, 0, 1)
def code6():
	label('.25');
	bytes(112,45,62,97,32,61,32,48);
	bytes(120,37,120,44,32,112,45,62);
	bytes(98,32,61,32,48,120,37,120);
	bytes(10,0);
# ======== ('DATA', '.24', code7, 0, 1)
def code7():
	label('.24');
	bytes(112,45,62,98,32,33,61,32);
	bytes(48,33,10,0);
# ======== ('DATA', '.10', code8, 0, 1)
def code8():
	label('.10');
	bytes(121,32,61,32,37,100,32,37);
	bytes(100,32,37,100,10,0);
# ======== ('DATA', '.4', code9, 0, 1)
def code9():
	label('.4');
	bytes(120,32,61,32,37,100,32,37);
	bytes(100,32,37,100,32,37,100,32);
	bytes(37,100,32,37,100,10,0);
# ======== (epilog)
code=[
	('EXPORT', 'x'),
	('DATA', 'x', code0, 8, 2),
	('EXPORT', 'i'),
	('DATA', 'i', code1, 2, 2),
	('EXPORT', 'y'),
	('DATA', 'y', code2, 4, 2),
	('EXPORT', 'main'),
	('CODE', 'main', code3),
	('EXPORT', 'f1'),
	('CODE', 'f1', code4),
	('EXPORT', 'f2'),
	('CODE', 'f2', code5),
	('IMPORT', 'printf'),
	('DATA', '.25', code6, 0, 1),
	('DATA', '.24', code7, 0, 1),
	('DATA', '.10', code8, 0, 1),
	('DATA', '.4', code9, 0, 1) ]
module(code=code, name='tst/fields.c', cpu=7);

# Local Variables:
# mode: python
# indent-tabs-mode: t
# End:
