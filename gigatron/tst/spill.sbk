#VCPUv7

# ======== ('CODE', 'main', code0)
def code0():
	label('main');
	PUSH();
	LDI(0);
	label('.1');
	tryhop(2);POP();RET()
# ======== ('CODE', 'f', code1)
def code1():
	label('f');
	_PROLOGUE(8,0,0x80); # save=R7
	MOVW(R8,R7);
	CALLI('f');STW(R23);
	STW(B0);_STLW(-2+8,src=R23);LDW(B0)  #genspill
	CALLI('f');STW(R22);
	_LDLW(-2+8);ADDW(R22);STW(R7);
	LDI(0);
	label('.2');
	_EPILOGUE(8,0,0x80,saveAC=True);
# ======== ('CODE', 'f2', code2)
def code2():
	label('f2');
	_PROLOGUE(8,0,0xc0); # save=R6-7
	MOVW(R8,R7);
	CALLI('f');STW(R23);
	STW(B0);_STLW(-2+8,src=R23);LDW(B0)  #genspill
	LDW(R7);_BEQ('.5');
	CALLI('f');
	STW(R6);
	_BRA('.6');
	label('.5');
	MOVQW(1,R6);
	label('.6');
	_LDLW(-2+8);ADDW(R6);STW(R7);
	LDI(0);
	label('.3');
	_EPILOGUE(8,0,0xc0,saveAC=True);
# ======== ('CODE', 'f3', code3)
def code3():
	label('f3');
	_PROLOGUE(32,0,0xff); # save=R0-7
	MOVW(R8,R7);
	MOVW(R9,R6);
	LDI(0);STW(R5);
	STW(R4);
	STW(R3);
	STW(R2);
	STW(R1);
	STW(R0);
	_STLW(-2+32);
	_STLW(-4+32);
	_STLW(-6+32);
	_STLW(-8+32);
	MOVW(R6,R23);
	STW(B0);_STLW(-12+32,src=R23);LDW(B0)  #genspill
	ADDIV(2,R6);
	LDW(R7);_BEQ('.9');
	CALLI('f');
	_STLW(-10+32);
	_BRA('.10');
	label('.9');
	LDI(0);_STLW(-10+32);
	label('.10');
	_LDLW(-10+32);STW(B0);_LDLW(-12+32);STW(T0);LDW(B0);DOKE(T0);
	LDI(0);
	label('.7');
	_EPILOGUE(32,0,0xff,saveAC=True);
# ======== ('CODE', 'f4', code4)
def code4():
	label('f4');
	_PROLOGUE(8,0,0x0); # save=None
	LDI(0);STW(R19);
	STW(R18);
	STW(R17);
	STW(R16);
	STW(R15);
	STW(R14);
	LDWI('i');DEEKA(R23);
	LDW(R23);_MULI(5);STW(R22);
	LDWI('a');ADDW(R22);_MOVF([vAC],F10);
	LDWI('b');ADDW(R22);_MOVF([vAC],F20);
	STW(B0);_MOVF(F20,[SP,-5+8]);LDW(B0) #genspill
	_MOVF('.15',F20);
	_MOVF(F10,FAC);_SP(-5+8);_FADD();LDI(F20);_FCMP();_BEQ('.13');
	LDW(R23);_BEQ('.13');
	_MOVF(F10,FAC);_SP(-5+8);_FSUB();LDI(F20);_FCMP();_BEQ('.13');
	MOVQW(1,R13);
	_BRA('.14');
	label('.13');
	MOVQW(0,R13);
	label('.14');
	LDWI('i');DOKEA(R13);
	LDI(0);
	label('.11');
	_EPILOGUE(8,0,0x0,saveAC=True);
# ======== ('CODE', 'f5', code5)
def code5():
	label('f5');
	PUSH();
	LDWI('k');DEEKA(R23);
	LDWI('m');DEEKA(R22);
	LDWI('A');DEEKA(R21);
	LDW(R23);_MUL(R22);_MULI(5);ADDW(R21);STW(R20);
	LDWI('j');DEEKA(R19);
	LDW(R19);_MUL(R22);_MULI(5);ADDW(R21);STW(R22);
	LDWI('n');DEEKA(R21);
	LDWI('B');DEEKA(R18);
	LDW(R23);_MUL(R21);_MULI(5);ADDW(R18);STW(R23);
	LDW(R19);_MUL(R21);_MULI(5);ADDW(R18);STW(R21);
	LDW(R23);_MOVF([vAC],FAC);LDW(R21);_FMUL();_MOVF(FAC,F17);
	LDW(R20);_MOVF([vAC],FAC);LDW(R22);_FMUL();LDI(F17);_FADD();_MOVF(FAC,'x');
	LDW(R23);_MOVF([vAC],FAC);LDW(R22);_FMUL();_MOVF(FAC,F17);
	LDW(R20);_MOVF([vAC],FAC);LDW(R21);_FMUL();LDI(F17);_FSUB();_MOVF(FAC,'x');
	LDI(0);
	label('.16');
	tryhop(2);POP();RET()
# ======== ('COMMON', 'x', code6, 5, 1)
def code6():
	label('x');
	space(5);
# ======== ('COMMON', 'B', code7, 2, 2)
def code7():
	align(2);
	label('B');
	space(2);
# ======== ('COMMON', 'A', code8, 2, 2)
def code8():
	align(2);
	label('A');
	space(2);
# ======== ('COMMON', 'n', code9, 2, 2)
def code9():
	align(2);
	label('n');
	space(2);
# ======== ('COMMON', 'm', code10, 2, 2)
def code10():
	align(2);
	label('m');
	space(2);
# ======== ('COMMON', 'k', code11, 2, 2)
def code11():
	align(2);
	label('k');
	space(2);
# ======== ('COMMON', 'j', code12, 2, 2)
def code12():
	align(2);
	label('j');
	space(2);
# ======== ('COMMON', 'i', code13, 2, 2)
def code13():
	align(2);
	label('i');
	space(2);
# ======== ('COMMON', 'b', code14, 50, 1)
def code14():
	label('b');
	space(50);
# ======== ('COMMON', 'a', code15, 50, 1)
def code15():
	label('a');
	space(50);
# ======== ('DATA', '.15', code16, 0, 1)
def code16():
	label('.15');
	bytes(0,0,0,0,0); # 0
# ======== (epilog)
code=[
	('EXPORT', 'main'),
	('CODE', 'main', code0),
	('EXPORT', 'f'),
	('CODE', 'f', code1),
	('EXPORT', 'f2'),
	('CODE', 'f2', code2),
	('EXPORT', 'f3'),
	('CODE', 'f3', code3),
	('EXPORT', 'f4'),
	('CODE', 'f4', code4),
	('EXPORT', 'f5'),
	('CODE', 'f5', code5),
	('COMMON', 'x', code6, 5, 1),
	('COMMON', 'B', code7, 2, 2),
	('COMMON', 'A', code8, 2, 2),
	('COMMON', 'n', code9, 2, 2),
	('COMMON', 'm', code10, 2, 2),
	('COMMON', 'k', code11, 2, 2),
	('COMMON', 'j', code12, 2, 2),
	('COMMON', 'i', code13, 2, 2),
	('COMMON', 'b', code14, 50, 1),
	('COMMON', 'a', code15, 50, 1),
	('DATA', '.15', code16, 0, 1) ]
module(code=code, name='tst/spill.c', cpu=7);

# Local Variables:
# mode: python
# indent-tabs-mode: t
# End:
